schemaVersion: 2.2.0
metadata:
  name: demo-app-{{ user_id }}
  displayName: "user-{{ user_id }} IDE"
  description: SpringBoot IDE development environment for user-{{ user_id }}
  tags:
    - Java
    - Spring
  projectType: springboot
  language: Java
  version: 1.3.0
components:
  - name: tools
    container:
      image: registry.redhat.io/devspaces/udi-rhel9@sha256:cdb28f694cc9ceea8999f5ec2bad33a92c6d03e16814bfd08ccbb0c0fb1d815a
      args: ['tail', '-f', '/dev/null']
      memoryRequest: 256M
      memoryLimit: 6Gi
      cpuRequest: 250m
      cpuLimit: 2000m
      command:  ["sh", "-c"]
      args:
      - | 
        git config --global user.name "user-{{ user_id }}"
        git config --global user.email "user{{ user_id }}@hackathon.com"
        tail -f /dev/null
      env:
        - name: JAVA_HOME
          value: /usr/lib/jvm/java-17
      mountSources: true
      volumeMounts:
        - name: m2
          path: /home/user/.m2
      endpoints:
        - name: accounts-index
          targetPort: 8080
          protocol: http
          path: /
  - name: postgres
    container:
      image: postgres:16
      env:
        - name: PGDATA
          value: /tmp/pgdata
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: password
        - name: POSTGRES_DB
          value: demo
      memoryLimit: 512Mi
      mountSources: true
      sourceMapping: /projects
      volumeMounts:
        - name: postgresql-data
          path: /var/lib/postgresql/data
  - name: m2
    volume:
      size: 250Mi
  - name: postgresql-data
    volume: {}
commands:
  - id: unit-test
    exec:
      label: 1. Run unit tests
      component: tools
      commandLine: 'mvn -Dmaven.repo.local=/home/user/.m2/repository test'
      workingDir: ${PROJECT_SOURCE}
  - id: clean-package
    exec:
      label: 2. Clean and package application
      component: tools
      commandLine: 'mvn  -Dmaven.repo.local=/home/user/.m2/repository clean package'
      hotReloadCapable: true
      group:
        kind: run
        isDefault: true
      workingDir: ${PROJECT_SOURCE}
  - id: springboot-run
    exec:
      label: 3. Run application locally
      component: tools
      commandLine: 'mvn  -Dmaven.repo.local=/home/user/.m2/repository spring-boot:run'
      hotReloadCapable: true
      group:
        kind: run
        isDefault: true
      workingDir: ${PROJECT_SOURCE}